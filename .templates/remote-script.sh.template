{% extends "templates/remote.sh.template" %}

{% block before_script %}
{{ super() }}
    if ssh {{ host }} -q exit; then
        echo "VM already running"
    else
        echo "Starting VM"
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
        exe chmod 400 ~/.ssh/azure.pem
        exe az login --service-principal -u http://travis-ci -p ~/.ssh/azure.pem --tenant appliedbrainresearch.com
        exe az vm start --resource-group nengo-ci --name nengo-dl-{{ remote_script }}
    fi

    ssh {{ host }} -q "echo 'Connected to {{ host }}'"
{% endblock %}

{% block remote_install %}
{{ super() }}
        # copy environment variables into remote environment
        export NUMPY_VERSION="$NUMPY_VERSION"
        export PYTORCH_VERSION="$PYTORCH_VERSION"

        pip install git+https://github.com/nengo/nengo-bones#egg=nengo-bones
        bones-generate --output-dir .ci ci-scripts || REMOTE_STATUS=1
        conda install -y cudatoolkit=10.2
        bash .ci/{{ remote_script }}.sh install || REMOTE_STATUS=1
{% endblock %}

{% block remote_script %}
{{ super() }}
        export TRAVIS_JOB_NUMBER="$TRAVIS_JOB_NUMBER"
        export TRAVIS_BRANCH="$TRAVIS_BRANCH"
        export TRAVIS_TAG="$TRAVIS_TAG"
        export TEST_ARGS="$TEST_ARGS"

        echo "Waiting for lock on GPU $GPU_NUM"
        (
            flock -x -w 540 200 || exit 1
            CUDA_VISIBLE_DEVICES="$GPU_NUM" bash .ci/{{ remote_script }}.sh script || exit 1
        ) 200>/var/lock/.travis-ci.exclusivelock."$GPU_NUM" || REMOTE_STATUS=1
{% endblock %}

{% block after_script %}
    {% if remote_script == "docs" %}
    REMOTE_FAILED_FILE="tmp/{{ pkg }}-$TRAVIS_JOB_NUMBER/{{ pkg }}/$TRAVIS_JOB_NUMBER.failed"
    ssh -q {{ host }} [[ -e "$REMOTE_FAILED_FILE" ]] && exe scp {{ host }}:"$REMOTE_FAILED_FILE" .
    exe rsync -azh "{{ host }}:./tmp/{{ pkg }}-$TRAVIS_JOB_NUMBER/{{ pkg }}-docs" ..
    {% endif %}
    exe bash .ci/{{ remote_script }}.sh after_script
{{ super() }}
{% endblock %}
